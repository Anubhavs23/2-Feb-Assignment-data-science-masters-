Q1. What are the characteristics of the tuples? Is tuple immutable?

Ans 1:- Tuples are an immutable data type, which means that once they have been generated, their elements cannot be changed.
Since tuples are ordered sequences, each element has a specific order that will never change.

Q2. What are the two tuple methods in python? Give an example of each method. Give a reason why
tuples have only two in-built methods as compared to Lists.

Ans :- A tuple is created by placing all the items (elements) inside parentheses (), separated by commas.
The parentheses are optional, however, it is a good practice to use them.
A tuple can have any number of items and they may be of different types (integer, float, list, string, etc.).

my_tuple.count('p') - counts total number of 'p' in my_tuple
my_tuple.index('l') - returns the first occurrence of 'l' in my_tuple



Q3. Which collection datatypes in python do not allow duplicate items? Write a code using a set to remove
duplicates from the given list.
List = [1, 1, 1, 2, 1, 3, 1, 4, 2, 1, 2, 2, 2, 3, 2, 4, 3, 1, 3, 2, 3, 3, 3, 4, 4, 1, 4, 2, 4, 3, 4, 4]
Ans:-

List = [1, 1, 1, 2, 1, 3, 1, 4, 2, 1, 2, 2, 2, 3, 2, 4, 3, 1, 3, 2, 3, 3, 3, 4, 4, 1, 4, 2, 4, 3, 4, 4]
set={List[0]}

for ele in List:
    set.add(ele)
    
print(set)




Q4. Explain the difference between the union() and update() methods for a set. Give an example of
each method.
Ans :- Union method :
	This method is used to return the union of a set and the set of elements from one or more iterable like string, list, set. This method takes arbitrary number of iterable objects as argument, which means one or more iterable can be passed. If iterable other than set is passed, it first converts the iterable object to set object and then perform the union operation. It returns a newly created set, which contains all the elements ( distinct ) present in all the iterables.
Syntax : < Set Object >.union( *<iterable object> ) : < Set Object >


A = {1,2,3,4,5}
B = {4,5,6,7,8,9}
S = A.union(B)
print('A : ',A)
print('B : ',B)
print('A Union B : ',S)
L = [11,12,13,14,15]
S = A.union(B,L)
print('A : ',A)
print('B : ',B)
print('L : ',L)
print('A Union B Union L : ',S)


update Method :
This method is used to return the union of a set and the set of elements from one or more iterable like string, list, set. It is very similar to union() method, with difference is that where union() method create and return a new set, containing all the elements ( distinct ) present in all the iterables, update() method updates the set on which this method is called with all the distinct elements present in all the iterables.

Syntax : < Set Object >.update( *<iterable object> )

A = {1,2,3,4,5}
B = {4,5,6,7,8,9}
A.update(B)
print('A Union B : ',A)
L = [11,12,13,14,15]
A.update(B,L)
print('A Union B Union L : ',A)


Q5. What is a dictionary? Give an example. Also, state whether a dictionary is ordered or unordered.
Ans:- Dictionaries are used to store data values in key:value pairs.
A dictionary is a collection which is ordered*, changeable and do not allow duplicates.

As of Python version 3.7, dictionaries are ordered. In Python 3.6 and earlier, dictionaries are unordered.

thisdict = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
print(thisdict)


Q6. Can we create a nested dictionary? If so, please give an example by creating a simple one-level
nested dictionary.

Ans:-In Python, a nested dictionary is a dictionary inside a dictionary. It's a collection of dictionaries into one single dictionary.

nested_dict = { 'dictA': {'key_1': 'value_1'},
                'dictB': {'key_2': 'value_2'}}
Here, the nested_dict is a nested dictionary with the dictionary dictA and dictB. They are two dictionary each having own key and value.


Q7. Using setdefault() method, create key named topics in the given dictionary and also add the value of
the key as this list ['Python', 'Machine Learning’, 'Deep Learning']
dict1 = {'language' : 'Python', 'course': 'Data Science Masters'}

Ans:-


dict1={'language' : 'Python', 'course': 'Data Science Masters'}
l= ['Python', 'Machine Learning’, 'Deep Learning']
dict1.setdefault("topics",l)
print(dict1)


Q8. What are the three view objects in dictionaries? Use the three in-built methods in python to display
these three view objects for the given dictionary.
dict1 = {'Sport': 'Cricket' , 'Teams': ['India', 'Australia', 'England', 'South Africa', 'Sri Lanka', 'New Zealand']}
Ans:- The main view objects of dictionary in python are keys, values and items. They provide a non-constant view of the dictionary’s entries.

Keys holds all the keys of the dictionary, the values objects holds all the values, whereas the items holds the key-value pairs.

keys:-
dict1={'Sport': 'Cricket' , 'Teams': ['India', 'Australia', 'England', 'South Africa', 'Sri Lanka', 'New Zealand']}
l=dict1.keys()
print(l)

values:-
{'Sport': 'Cricket' , 'Teams': ['India', 'Australia', 'England', 'South Africa', 'Sri Lanka', 'New Zealand']}
l1=dict1.values()
print(l1)

items:-
dict1={'Sport': 'Cricket' , 'Teams': ['India', 'Australia', 'England', 'South Africa', 'Sri Lanka', 'New Zealand']}
l2=dict1.items()
print(l2)
